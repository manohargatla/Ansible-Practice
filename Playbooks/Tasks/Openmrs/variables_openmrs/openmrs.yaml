## Write a playbook to install openmrs application 
--- 
- name: install openmrs application
  hosts: tomcat
  become: yes
  tasks:
    - name: install java-17  ## install java 
      ansible.builtin.apt:
        name: "{{ java_version }}"
        update_cache: yes
        state: present
    - name: Create a group 
      ansible.builtin.group:
        name: "{{ group }}"
        state: present
    - name: Create a user 
      ansible.builtin.user:
        name: "{{ user }}"
        create_home: yes
        group: "{{ group }}"
        home: "{{ home_dir }}"
        shell: "{{ into_shell }}"
    - name: Download tomcat tar file # install tomcat
      ansible.builtin.get_url:
        url: https://archive.apache.org/dist/tomcat/tomcat-{{ tomcat_main_ver }}/v{{ tomcat_ver }}/bin/apache-tomcat-{{ tomcat_ver }}.tar.gz
        dest: "/tmp/apache-tomcat-{{ tomcat_ver }}.tar.gz"
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ home_dir }}"
        state: directory
    - name: untar the the tomcat tar file
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_ver }}.tar.gz"
        dest: "{{ home_dir }}"
        remote_src: yes
        extra_opts:
          --strip-components=1
    - name: Changing group to tomcat
      ansible.builtin.file:
        path: "{{ home_dir }}"
        group: "{{ group }}"
        owner: "{{ user }}"
        recurse: yes
        state: directory
    - name: Change conf permissions
      ansible.builtin.file:
        path: conf
        group: "{{ group }}"
        owner: "{{ user }}"
        recurse: yes
        mode: g+rx
    - name: Changing ownership for directories webapps permissions
      ansible.builtin.file:
        path:
          - webapps/
          - work/
          - temp/
          - logs
        group: "{{ group }}"
        owner: "{{ user }}"
        recurse: yes  
    - name: copy the tomcat service file
      ansible.builtin.template:
        src: tomcat.service.j2
        dest: /etc/systemd/system/tomcat.service
    - name: daemon-reload
      ansible.builtin.systemd:
        daemon_reload: yes
    - name: start tomcat service
      ansible.builtin.systemd:
        name: tomcat
        state: started
    - name: create a directory if doesn't exists  # install openmrs app
      ansible.builtin.file:
        path: /var/lib/OpenMRS
        group: "{{ group }}"
        owner: "{{ user }}"
        recurse: yes
        state: directory
    - name: Download openmrs tar file
      ansible.builtin.get_url:
        url: https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.5.0/openmrs.war
        dest: /tmp/openmrs.war
    - name: copy the war file
      ansible.builtin.copy:
        src: /tmp/openmrs.war
        dest: "{{ home_dir }}/webapps"
        remote_src: yes
        group: "{{ group }}"
        owner: "{{ user }}"
    - name: Change file, use and group permissions
      ansible.builtin.file:
        path: "{{ home_dir }}/webapps"
        group: "{{ group }}"
        owner: "{{ user }}"
        recurse: yes
        state: directory

      

      
        
